#ifdef VERT

uniform mat4 projectionMatrix;
uniform mat4 modelViewMatrix;

uniform float radius;
uniform float radiusHeightScale;
uniform float time;

attribute vec3 position;
attribute vec2 texCoord;

varying vec2 vTexCoord;
varying vec4 vColor;

#pragma glslify: cnoise3 = require(glsl-noise/classic/3d)

void main() {
  vec3 pos = position.xyz * radius;
  float noiseScale = 3.0;
  pos.y += radiusHeightScale * 0.3 * cnoise3(pos * noiseScale + vec3(time, 0.0, 0.0));
  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);
  vTexCoord = texCoord;
  vColor = vec4(radiusHeightScale);
}

#endif

#ifdef FRAG

uniform sampler2D lineTexture;

uniform float radius;

varying vec2 vTexCoord;
varying vec4 vColor;

void main() {
  vec2 lineTextureScale = vec2(floor(100.0 * radius), 1.0);
  gl_FragColor = texture2D(lineTexture, vTexCoord * lineTextureScale);
  gl_FragColor = vColor;
}

#endif
